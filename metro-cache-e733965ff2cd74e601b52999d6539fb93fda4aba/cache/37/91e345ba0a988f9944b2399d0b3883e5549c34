__d(function (global, require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = require(_dependencyMap[1], "./../../react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/home/nahuel/Desktop/FollowMe/node_modules/react-native-share/components/Overlay.js";

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNative = require(_dependencyMap[2], "react-native");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    _component: {}
  };

  var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/nahuel/Desktop/FollowMe/node_modules/react-native-share/components/Overlay.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _reactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var DEFAULT_ANIMATE_TIME = 300;

  var styles = _reactNative.StyleSheet.create({
    fullOverlay: {
      top: 0,
      bottom: 0,
      left: 0,
      right: 0,
      backgroundColor: 'transparent',
      position: 'absolute'
    },
    emptyOverlay: {
      width: 0,
      height: 0,
      backgroundColor: 'transparent',
      position: 'absolute'
    }
  });

  var _component = _wrapComponent("_component")(function (_React$Component) {
    _inherits(_class2, _React$Component);

    function _class2() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, _class2);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = _class2.__proto__ || Object.getPrototypeOf(_class2)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
        fadeAnim: new _reactNative.Animated.Value(0),
        overlayStyle: styles.emptyOverlay
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(_class2, [{
      key: "onAnimatedEnd",
      value: function onAnimatedEnd() {
        if (!this.props.visible) {
          this.setState({
            overlayStyle: styles.emptyOverlay
          });
        }
      }
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(newProps) {
        if (newProps.visible) {
          this.setState({
            overlayStyle: styles.fullOverlay
          });
        }

        return _reactNative.Animated.timing(this.state.fadeAnim, {
          toValue: newProps.visible ? 1 : 0,
          duration: DEFAULT_ANIMATE_TIME
        }).start(this.onAnimatedEnd.bind(this));
      }
    }, {
      key: "render",
      value: function render() {
        return _react3.default.createElement(
          _reactNative.Animated.View,
          {
            style: [this.state.overlayStyle, {
              opacity: this.state.fadeAnim
            }],
            __source: {
              fileName: _jsxFileName,
              lineNumber: 44
            }
          },
          this.props.children
        );
      }
    }]);

    return _class2;
  }(_react3.default.Component));

  exports.default = _component;
});